% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dkge-cpca.R
\name{dkge_cpca_fit}
\alias{dkge_cpca_fit}
\title{Fit DKGE with CPCA filtering}
\usage{
dkge_cpca_fit(
  ...,
  cpca_blocks = NULL,
  cpca_T = NULL,
  cpca_part = c("design", "resid", "both"),
  cpca_ridge = 0
)
}
\arguments{
\item{...}{Additional arguments passed to [dkge()].}

\item{cpca_blocks}{Optional integer vector specifying the effect rows that
span a CPCA design subspace. Ignored when `cpca_part = "none"` or when
`cpca_T` is provided.}

\item{cpca_T}{Optional q√óq0 matrix giving the CPCA design basis explicitly.
Overrides `cpca_blocks` when supplied.}

\item{cpca_part}{Which CPCA-filtered component to fit: `"none"` (default)
performs the standard DKGE fit; `"design"` uses only the CPCA design part;
`"resid"` uses the residual part; `"both"` fits the design part but also
stores the residual basis.}

\item{cpca_ridge}{Optional ridge applied to the CPCA-filtered matrices before
eigen-decomposition.}
}
\description{
Convenience wrapper around [dkge()] that enables CPCA filtering with a
slightly terser interface. Either `cpca_blocks` or `cpca_T` must be provided.
Additional arguments are forwarded to [dkge()].
}
