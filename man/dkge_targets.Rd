% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dkge-targets.R
\name{dkge_targets}
\alias{dkge_targets}
\title{Build classification targets from a DKGE fit}
\usage{
dkge_targets(
  fit,
  spec = NULL,
  residualize = TRUE,
  collapse = NULL,
  scope = "within_subject",
  restrict_factors = NULL
)
}
\arguments{
\item{fit}{dkge object containing `kernel_info$map` metadata.}

\item{spec}{Target specification. Accepts a formula (e.g. `~ A + B + A:B`),
a character vector of term labels, the string "fullcell", or an existing
list of `dkge_target` objects (returned unchanged).}

\item{residualize}{Logical; if `TRUE` (default) residualise higher-order
targets against previously constructed lower-order targets.}

\item{collapse}{Optional named list describing how to collapse factors that do
not appear in a target. Each entry may be `"mean"`,
`list(method = "mean", window = 3:8)`, or a numeric vector of length equal
to the number of levels providing custom weights (automatically normalised).}

\item{scope}{Permutation/exchangeability scope stored with each target
(default "within_subject").}

\item{restrict_factors}{Optional character vector restricting the factors used
when `spec = "fullcell"`. When `NULL`, all factors are used.}
}
\value{
List of objects with class `dkge_target`. Each target contains
  `name`, `factors`, `labels`, `weight_matrix`, `indicator`, `residualized`,
  `collapse`, and `scope` fields.
}
\description{
Generates a list of target specifications that map cell-level design
structure to the DKGE effect space. Each target provides a weight matrix that
can be multiplied with subject effect coefficients to obtain class-specific
patterns for decoding.
}
\examples{
\dontrun{
tg <- dkge_targets(fit, ~ A + B + A:B, collapse = list(time = list(method = "mean", window = 3:8)))
}
}
