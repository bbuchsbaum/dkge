% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dkge-pipeline.R
\name{dkge_pipeline}
\alias{dkge_pipeline}
\title{End-to-end DKGE workflow}
\usage{
dkge_pipeline(
  fit = NULL,
  betas = NULL,
  designs = NULL,
  kernel = NULL,
  omega = NULL,
  contrasts,
  transport = NULL,
  inference = list(),
  classification = NULL,
  method = c("loso", "kfold", "analytic"),
  ridge = 0,
  ...
)
}
\arguments{
\item{fit}{Optional pre-computed `dkge` object. If `NULL`, provide `betas`,
`designs`, and `kernel` to fit inside the pipeline.}

\item{betas, designs, kernel}{Inputs passed to [dkge()] when `fit` is `NULL`.}

\item{omega}{Optional spatial weights forwarded to [dkge()].}

\item{contrasts}{Contrast specification as accepted by [dkge_contrast()].}

\item{transport}{Either a transport specification/service or `NULL`.}

\item{inference}{Either an inference specification/service or `NULL`.}

\item{classification}{Optional specification passed to [dkge_classify()].}

\item{method}{Cross-fitting strategy for contrasts (default "loso").}

\item{ridge}{Optional ridge added during held-out decompositions.}

\item{...}{Additional arguments passed to [dkge()] when fitting inside the
pipeline, or to [dkge_contrast()].}
}
\value{
List containing the fit, diagnostics, raw contrast values, transported
  maps (if requested), and inference results.
}
\description{
Fits DKGE (if needed), computes cross-fitted contrasts, optionally transports
them to a medoid parcellation, and performs sign-flip inference.
}
