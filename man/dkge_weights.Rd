% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dkge-weights.R
\name{dkge_weights}
\alias{dkge_weights}
\title{Create a DKGE voxel-weight specification}
\usage{
dkge_weights(
  prior = NULL,
  adapt = c("none", "kenergy", "precision", "kenergy_prec", "reliability"),
  combine = c("product", "sum", "override_adapt", "override_prior"),
  mix = 0.6,
  shrink = list(alpha = 0.5, winsor = 0.99, normalize = "mean", roi_smooth = FALSE),
  scope = c("fold", "subject"),
  k_weight = NULL,
  collapse = NULL,
  roi = NULL
)
}
\arguments{
\item{prior}{Optional prior weights: numeric vector of length V, logical mask,
integer indices, or ROI labels (factor/integer) per voxel. Helpers
[dkge_weights_prior_mask()] and [dkge_weights_prior_roi()] ease construction.}

\item{adapt}{Adaptive weighting rule, one of `"none"`, `"kenergy"`,
`"precision"`, `"kenergy_prec"`, `"reliability"` (reserved for future use).}

\item{combine}{How prior and adaptive sources combine: `"product"` (default),
`"sum"`, `"override_adapt"`, or `"override_prior"`.}

\item{mix}{Numeric in [0,1] controlling the relative influence of the adaptive
component. Interpreted in log-space for `combine = "product"`.}

\item{shrink}{List with fields `alpha` (shrink towards uniform), `winsor`
(upper quantile cap), `normalize` (`"mean"` or `"sum"`), and optional
`roi_smooth = TRUE` to median-smooth within ROIs.}

\item{scope}{Either `"fold"` (default: compute adapt weights from training
subjects within each fold) or `"subject"` (per-subject adaptive weights
averaged for fold pooling).}

\item{k_weight}{Optional effect-space kernel for k-energy rules. When `NULL`
we reuse the kernel stored in the fit, with optional factor `collapse`.}

\item{collapse}{Optional list describing factor collapses (e.g.,
`list(time = "mean")` or `list(time = list(method = "mean", window = 3:8))`).}

\item{roi}{Optional ROI labels used when `shrink$roi_smooth = TRUE`.}
}
\value{
Object of class `"dkge_weights"`.
}
\description{
Constructs a lightweight object describing how voxel-level weights are
resolved and applied when building weighted second moments inside DKGE. The
specification is attached to fits and reused by fold builders to ensure
cross-fitting remains leak-free.
}
