% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dkge-analytic.R
\name{dkge_analytic_loso}
\alias{dkge_analytic_loso}
\title{Analytic LOSO contrast using eigenvalue perturbation}
\usage{
dkge_analytic_loso(fit, s, c, tol = 1e-06, fallback = TRUE, ridge = 0)
}
\arguments{
\item{fit}{A `dkge` object from [dkge_fit()]}

\item{s}{Subject index (1-based) to leave out}

\item{c}{Contrast vector in the original design basis (length q)}

\item{tol}{Numerical tolerance for determining when to fall back to full eigen}

\item{fallback}{If TRUE, fall back to full eigen when perturbation may be unstable}

\item{ridge}{Ridge regularization parameter (default 0)}
}
\value{
List with fields:
  - `v`: Cluster contrast values for subject s
  - `alpha`: Contrast coordinates in latent space
  - `basis`: Approximated held-out basis U^(-s)
  - `method`: "analytic" or "fallback" if full eigen was used
}
\description{
Approximates leave-one-subject-out contrast values using first-order
eigenvalue perturbation theory, avoiding full eigen-decomposition per subject.
}
\details{
This function implements the first-order eigenvalue perturbation approximation
described in the paper. For the held-out compressed covariance:

Chat^(-s) ~ Chat - w_s S_s

The eigenvalues and eigenvectors are updated using:
- deltalambda_j = -w_s v_j^T S_s v_j (eigenvalue shift)
- deltav_j = -w_s Sigma_{k!=j} (v_k^T S_s v_j)/(lambda_j - lambda_k) v_k (eigenvector rotation)

This avoids the O(q^3) eigen-decomposition, requiring only O(q^2r) operations
where r is the rank. The approximation is accurate when:
1. Subject weights w_s are small (no single subject dominates)
2. Eigenvalue gaps are large (well-separated components)
3. The perturbation S_s is not aligned with transition regions

When these conditions are violated (detected via condition number or
eigenvalue gaps), the function can fall back to full eigen-decomposition.
}
\examples{
\dontrun{
# Fast analytic approximation for single subject
result <- dkge_analytic_loso(fit, s = 1, c = c(1, -1, 0, 0, 0))

# Check if approximation was used
if (result$method == "analytic") {
  cat("Used fast approximation\n")
} else {
  cat("Fell back to full eigen\n")
}
}

}
\references{
Golub, G. H., & Van Loan, C. F. (2013). Matrix computations (4th ed.).
Stewart, G. W., & Sun, J. (1990). Matrix perturbation theory.
}
