// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// pairwise_sqdist_cpp
arma::mat pairwise_sqdist_cpp(const arma::mat& A, const arma::mat& B);
RcppExport SEXP _dkge_pairwise_sqdist_cpp(SEXP ASEXP, SEXP BSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type A(ASEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type B(BSEXP);
    rcpp_result_gen = Rcpp::wrap(pairwise_sqdist_cpp(A, B));
    return rcpp_result_gen;
END_RCPP
}
// sinkhorn_plan_cpp
Rcpp::List sinkhorn_plan_cpp(Rcpp::NumericMatrix C, Rcpp::NumericVector mu, Rcpp::NumericVector nu, double epsilon, int max_iter, double tol, Rcpp::Nullable<Rcpp::NumericVector> log_u_init, Rcpp::Nullable<Rcpp::NumericVector> log_v_init, bool keep_duals);
RcppExport SEXP _dkge_sinkhorn_plan_cpp(SEXP CSEXP, SEXP muSEXP, SEXP nuSEXP, SEXP epsilonSEXP, SEXP max_iterSEXP, SEXP tolSEXP, SEXP log_u_initSEXP, SEXP log_v_initSEXP, SEXP keep_dualsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type C(CSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type mu(muSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type epsilon(epsilonSEXP);
    Rcpp::traits::input_parameter< int >::type max_iter(max_iterSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::NumericVector> >::type log_u_init(log_u_initSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::NumericVector> >::type log_v_init(log_v_initSEXP);
    Rcpp::traits::input_parameter< bool >::type keep_duals(keep_dualsSEXP);
    rcpp_result_gen = Rcpp::wrap(sinkhorn_plan_cpp(C, mu, nu, epsilon, max_iter, tol, log_u_init, log_v_init, keep_duals));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_dkge_pairwise_sqdist_cpp", (DL_FUNC) &_dkge_pairwise_sqdist_cpp, 2},
    {"_dkge_sinkhorn_plan_cpp", (DL_FUNC) &_dkge_sinkhorn_plan_cpp, 9},
    {NULL, NULL, 0}
};

RcppExport void R_init_dkge(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
