# Generated by roxygen2: do not edit by hand

S3method(apply_mapper,dkge_mapper_fit_knn)
S3method(apply_mapper,dkge_mapper_fit_sinkhorn)
S3method(apply_mapper,dkge_mapping)
S3method(as.matrix,dkge_contrasts)
S3method(dkge_subject,ClusteredNeuroVec)
S3method(dkge_subject,NeuroVec)
S3method(dkge_subject,default)
S3method(dkge_subject,dkge_subject)
S3method(dkge_subject,list)
S3method(dkge_subject,matrix)
S3method(fit_mapper,dkge_mapper_gw)
S3method(fit_mapper,dkge_mapper_knn)
S3method(fit_mapper,dkge_mapper_ridge)
S3method(fit_mapper,dkge_mapper_sinkhorn)
S3method(fit_mapper,dkge_mapper_spec_ols)
S3method(fit_mapper,dkge_mapper_spec_ridge)
S3method(fit_mapper,dkge_mapper_spec_sinkhorn)
S3method(predict_mapper,dkge_mapping)
S3method(predict_mapper,dkge_mapping_ols)
S3method(predict_mapper,dkge_mapping_ridge)
S3method(predict_mapper,dkge_mapping_sinkhorn)
S3method(print,dkge_contrasts)
S3method(print,dkge_folds)
S3method(print,dkge_inference)
export(.dkge_contrast_kfold)
export(apply_mapper)
export(design_kernel)
export(dkge)
export(dkge_align_bases_K)
export(dkge_analytic_loso)
export(dkge_anchor_aggregate)
export(dkge_anchor_graph)
export(dkge_anchor_to_voxel_apply)
export(dkge_anchor_to_voxel_fit)
export(dkge_bootstrap_analytic)
export(dkge_bootstrap_projected)
export(dkge_bootstrap_qspace)
export(dkge_build_renderer)
export(dkge_cluster_betas)
export(dkge_cluster_ts)
export(dkge_component_stats)
export(dkge_consensus_basis_K)
export(dkge_contrast)
export(dkge_cpca_fit)
export(dkge_cpca_split_chat)
export(dkge_cv_kernel_grid)
export(dkge_cv_kernel_rank)
export(dkge_cv_rank_loso)
export(dkge_data)
export(dkge_define_folds)
export(dkge_design_kernel)
export(dkge_diagnostics)
export(dkge_fit)
export(dkge_fit_cpca)
export(dkge_freedman_lane)
export(dkge_freeze)
export(dkge_infer)
export(dkge_k_orthonormalize)
export(dkge_kernel_alignment)
export(dkge_kernel_prescreen)
export(dkge_kernel_roots)
export(dkge_loso_contrast)
export(dkge_make_anchors)
export(dkge_mapper)
export(dkge_mapper_spec)
export(dkge_neuro_loader)
export(dkge_one_se)
export(dkge_paint_medoid_map)
export(dkge_pipeline)
export(dkge_pooled_cov_q)
export(dkge_predict)
export(dkge_predict_loadings)
export(dkge_predict_stream)
export(dkge_prepare_transport)
export(dkge_preprocess_blocks)
export(dkge_procrustes_K)
export(dkge_project_block)
export(dkge_project_blocks)
export(dkge_project_btil)
export(dkge_project_cluster)
export(dkge_project_clusters)
export(dkge_projector_K)
export(dkge_render_subject_values)
export(dkge_signflip_maxT)
export(dkge_subject)
export(dkge_transform_block)
export(dkge_transport_contrasts_to_medoid)
export(dkge_transport_loadings_to_medoid)
export(dkge_transport_to_medoid_sinkhorn)
export(dkge_transport_to_medoid_sinkhorn_cpp)
export(dkge_transport_to_voxels)
export(dkge_variance_explained)
export(dkge_write_component_stats)
export(fit_mapper)
export(helmert_contrasts)
export(kernel_alignment)
export(kernel_roots)
export(predict_mapper)
export(sum_contrasts)
importFrom(Rcpp,sourceCpp)
useDynLib(dkge, .registration = TRUE)
